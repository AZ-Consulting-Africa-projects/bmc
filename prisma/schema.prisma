// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("POSTGRES_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  firstName String
  lastName  String
  password  String
  phone Int
  departement String
  position String
  hire_date String
  salary Decimal
  role RoleType
  isVisible Boolean @default(true)
  isActived Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  attendances Attendance[]
  trainingPrograms TrainingPrograms[]
}

model Attendance {
  id    Int     @id @default(autoincrement())
  userId Int
  date String
  inTime String
  outTime String
  status AttendanceStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
}

model Recrutement {
  id    Int     @id @default(autoincrement())
  email String  @unique
  firstName String
  lastName  String
  post String
  phone Int
  position String
  documents String
  status RecrutementStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TrainingPrograms {
  id    Int     @id @default(autoincrement())
  name String
  description String
  startDate String
  endDate String
  userIds Int
  user User @relation(fields: [userIds], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum RecrutementStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
}

enum RoleType {
  ADMIN
  EMPLOYEE
  MANAGER
  HR
}
